<div class="chat" id="chat">

    @* Chat messages container *@
    <div class="pb-lg-4 chat-list">
        <transition-group name="list" tag="ul" class="chat-messages">
            @foreach (var (id, message) in _messages)
        {
            <li id="@message.Id" class="@(message.IsGreeting ? "greeting" : "")">
                    <div class="gutter pr-lg-2 text-muted">@message.User</div>
                    <div class="arrow-container">
                        <span class="arrow arrow2"></span>
                        <span class="arrow arrow1"></span>
                    </div>
                    <div class="message pl-lg-2 @(OwnsMessage(message.User) ? "canEdit" : "")"
                         @onclick="@(async () => await StartEdit(message))">
                        @{
                        MarkupString messageMarkup = new(message.Text);
                        <span>
                                @messageMarkup
                            </span>
                        @if (message.IsEdit)
                        {
                            <span class="pl-2 text-muted">
                                    <span class="badge badge-secondary">edited</span>
                                </span>
                        }
                    }
                    </div>
                </li>
        }
        </transition-group>
    </div>

    @* Post message input / button *@
    <section class="post-container">
        <div class="form-row">
            <div class="form-group col-lg-10">
                <div class="input-group input-group-lg mb-3">
                    <input @ref="_messageInput" type="text" class="form-control" placeholder="Type a message..."
                           @bind-value="@_message" @oninput="@InitiateDebounceUserIsTyping"
                           @onkeyup="@(args => OnKeyUp(args))" autocomplete="off">
                    <div class="input-group-append">
                        <button class="btn btn-lg btn-primary" @onclick="@SendMessage">Post</button>
                    </div>
                </div>
            </div>
            <div class="form-group col-lg-2">
                <div class="emoji float-right">
                    @foreach (var emoji in new[] { "🤣", "🤬", "🤘" })
                {
                    <span @onclick="@(() => AppendToMessage(emoji))">
                            @emoji
                        </span>
                }
                    <span style="padding-left: 20px" data-toggle="modal" data-target='#settingsModal'>⚙️</span>
                </div>
            </div>
        </div>
        <div class="form-row">
            @{
                static string UsersTypingText(string[]? usersTyping) => usersTyping?.Length switch
                {
                    0 => "&nbsp;",
                    1 => $"💬 <strong>{usersTyping[0]}</strong> is typing...",
                    2 => $"💬 <strong>${usersTyping[0]}</strong> and <strong>${usersTyping[1]}</strong> are typing...",
                    _ => "💬 Multiple people are typing..."
                };

                MarkupString isTypingMarkup = new(UsersTypingText(_usersTyping?.Select(a => a.User).ToArray()));
                <span class="text-muted @(_usersTyping is { Count: > 0 } ? "flashing" : "")">
                    @isTypingMarkup
                </span>
            }
        </div>
    </section>

    @* Voice settings modal *@
    <div class="modal fade" id="settingsModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Settings</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="range">Voice speed: @VoiceSpeed</label>
                            <input type="range" min="@_voiceSpeeds.Min()" max="@_voiceSpeeds.Max()"
                                   step=".25" class="form-control-range" id="range" list="speeds"
                                   value="@VoiceSpeed"
                                   @onchange="(args => VoiceSpeed = double.TryParse(args.Value?.ToString(), out var speed) ? speed : 1)">
                            <datalist id="speeds">
                            @foreach (var speed in _voiceSpeeds)
                            {
                                <option value="@speed">speed</option>
                            }
                            </datalist>
                        </div>
                        <div class="form-group">
                            <label for="voices">Default voice</label>
                            <select class="form-control" id="voices" @bind="@Voice">
                                <option selected>Auto</option>
                            @if (_voices is { Length: > 0 })
                            {
                                @foreach (var voice in _voices)
                                {
                                    <option selected="@voice.Default" value="@voice.Name">
                                        @voice.Name
                                    </option>
                                }
                            }
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Ok</button>
                </div>
            </div>
        </div>
    </div>
</div>
